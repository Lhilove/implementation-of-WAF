version: '3.8'

services:
  web:
    build: .
    environment:
      - DB_NAME=vulnerable_bank
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db
    volumes:
      - ./static/uploads:/app/static/uploads
    networks:
      - vuln_network

  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=vulnerable_bank
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - vuln_network

  # WAF = NGINX + ModSecurity + CRS (acts as reverse proxy)
  waf:
    image: owasp/modsecurity-crs:nginx
    depends_on:
      - web
    ports:
      - "80:80"
    volumes:
      # - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./modsec/modsecurity.conf:/etc/modsecurity/modsecurity.conf:ro
      - ./modsec/rules:/etc/modsecurity/custom-rules:ro
      - ./logs/nginx:/logs/nginx
      - ./logs/modsec:/logs/modsec
    networks:
      - vuln_network
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false     # lab only
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - vuln_network
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.4
    depends_on:
      - elasticsearch
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./logs/nginx:/data/nginx:ro
      - ./logs/modsec:/data/modsec:ro
    networks:
      - vuln_network
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - vuln_network
    restart: unless-stopped

volumes:
  postgres_data:
  esdata:

networks:
  vuln_network:
    driver: bridge
